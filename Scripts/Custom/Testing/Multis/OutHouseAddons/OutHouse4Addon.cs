/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class OutHouse4Addon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new OutHouse4AddonDeed();
			}
		}

		[ Constructable ]
		public OutHouse4Addon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 13001 );
			AddComponent( ac, -1, 2, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 2, 2, 0 );
			ac = new AddonComponent( 8560 );
			AddComponent( ac, 2, 2, 20 );
			ac = new AddonComponent( 8560 );
			AddComponent( ac, 1, 2, 23 );
			ac = new AddonComponent( 8564 );
			AddComponent( ac, 0, 2, 23 );
			ac = new AddonComponent( 8564 );
			AddComponent( ac, -1, 2, 20 );
			ac = new AddonComponent( 3206 );
			AddComponent( ac, -1, 2, 1 );
			ac = new AddonComponent( 3233 );
			AddComponent( ac, 0, 2, 4 );
			ac = new AddonComponent( 3203 );
			AddComponent( ac, 0, 2, 1 );
			ac = new AddonComponent( 3204 );
			AddComponent( ac, 1, 2, 1 );
			ac = new AddonComponent( 3206 );
			AddComponent( ac, 2, 2, 1 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 2, -1, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 2, 0, 0 );
			ac = new AddonComponent( 13001 );
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 249 );
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 249 );
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 249 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 249 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 250 );
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 250 );
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 250 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 251 );
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 1114 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 8560 );
			AddComponent( ac, 2, 0, 20 );
			ac = new AddonComponent( 8560 );
			AddComponent( ac, 2, 1, 20 );
			ac = new AddonComponent( 8564 );
			AddComponent( ac, -1, 0, 20 );
			ac = new AddonComponent( 8564 );
			AddComponent( ac, -1, 1, 20 );
			ac = new AddonComponent( 8560 );
			AddComponent( ac, 1, 0, 23 );
			ac = new AddonComponent( 8560 );
			AddComponent( ac, 1, 1, 23 );
			ac = new AddonComponent( 8564 );
			AddComponent( ac, 0, 0, 23 );
			ac = new AddonComponent( 8564 );
			AddComponent( ac, 0, 1, 23 );
			ac = new AddonComponent( 2885 );
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 3237 );
			AddComponent( ac, 2, 1, 4 );
			ac = new AddonComponent( 3231 );
			AddComponent( ac, 2, -1, 1 );

		}

		public OutHouse4Addon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class OutHouse4AddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new OutHouse4Addon();
			}
		}

		[Constructable]
		public OutHouse4AddonDeed()
		{
			Name = "OutHouse4";
		}

		public OutHouse4AddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}