
////////////////////////////////////////
//                                     //
//   Generated by CEO's YAAAG - Ver 2  //
// (Yet Another Arya Addon Generator)  //
//    Modified by Hammerhand for       //
//      SA & High Seas content         //
//                                     //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class VikingBoatAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {7723, 0, 4, 4}, {5367, 1, 4, 4}, {16057, 0, 4, 1}// 1	2	3	
			, {16054, -1, 4, 0}, {16058, 0, 5, 0}, {16053, 1, 4, 0}// 4	5	6	
			, {7721, -2, -3, 3}, {7720, -1, -3, 3}, {7721, -2, 1, 3}// 7	8	9	
			, {7720, -1, 1, 3}, {2919, 1, -2, 3}, {2919, 0, -2, 3}// 10	11	12	
			, {2919, -1, -2, 3}, {2919, 1, 2, 3}, {2919, 0, 2, 3}// 13	14	15	
			, {2919, -1, 2, 3}, {5370, 2, -2, 3}, {5368, 2, 2, 6}// 16	17	18	
			, {16044, 0, 3, 0}, {16044, 0, 2, 0}, {16044, 1, 1, 0}// 22	23	24	
			, {16044, 0, 1, 0}, {16044, -1, 1, 0}, {16044, 1, 0, 0}// 25	26	27	
			, {16044, 0, 0, 0}, {16044, -1, 0, 0}, {16044, 1, -1, 0}// 28	29	30	
			, {16044, 0, -1, 0}, {16044, -1, -1, 0}, {16044, 0, -2, 0}// 31	32	33	
			, {16045, 0, -3, 0}, {16046, 0, -4, 1}, {16031, -1, -2, 0}// 34	35	36	
			, {16029, -1, -3, 0}, {16027, -1, -4, 0}, {16049, -2, -1, 0}// 37	38	39	
			, {16049, -2, 0, 0}, {16049, -2, 1, 0}, {16037, -1, 2, 0}// 40	41	42	
			, {16039, -1, 3, 0}, {16040, 1, 3, 0}, {16038, 1, 2, 0}// 43	44	45	
			, {16050, 2, 1, 0}, {16032, 1, -2, 0}, {16083, 2, 0, 0}// 46	47	48	
			, {16050, 2, -1, 0}, {16030, 1, -3, 0}, {16028, 1, -4, 0}// 49	50	51	
			, {15941, 0, -5, 0}// 52	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new VikingBoatAddonDeed();
			}
		}

		[ Constructable ]
		public VikingBoatAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 935, 2, -1, 6, 1005, -1, "", 1);// 19
			AddComplexComponent( (BaseAddon) this, 935, 2, 1, 6, 1005, -1, "", 1);// 20
			AddComplexComponent( (BaseAddon) this, 935, 2, 2, 6, 1005, -1, "", 1);// 21

		}

		public VikingBoatAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class VikingBoatAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new VikingBoatAddon();
			}
		}

		[Constructable]
		public VikingBoatAddonDeed()
		{
			Name = "VikingBoat";
		}

		public VikingBoatAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}