using System;
using Server;
using System.Collections;
using System.Collections.Generic;
using Server.Items;
using Server.Misc;
using Server.Commands;
using Server.Mobiles.Data;
using Server.OneTime;

namespace Server.Mobiles
{

    public class PlayDirectorTemplate: BaseCreature, IOneTime // name the director to play[whatever] here and everywhere else
    {

//no need to change any of these
        public static List<Mobile> PlayersWaiting = new List<Mobile>();
		private int m_OneTimeType;
        public int OneTimeType
        {
            get{ return m_OneTimeType; }
            set{ m_OneTimeType = value; }
        }

        private Direction oldDirection;
        public override bool CanOpenDoors { get { return true; } }
        public override bool Unprovokable { get { return true; } }
		public override bool InitialInnocent{ get{ return true; } }
		public override bool DeleteCorpseOnDeath{ get{ return true; } }

        private bool m_criminalAction = false; 

        [CommandProperty(AccessLevel.GameMaster)]
        public bool AttackIsCriminal
        {
            get { return m_criminalAction; }
            set { m_criminalAction = value; }
        }

        private Mobile Actor1;

        private Mobile Actor2;

        private Mobile Actor3;

        private Mobile NewPlayer; // spectator

        private int PlayStep; // scene of the play

        private bool ActivePlay; // is the play running?

        private int PlayCheck; // 0 is inactive, 1 is no response (play only), 2+ is response needed

        private int CheckCount; 

        private bool Waiting;

        private int NoAnswer;

        [Constructable]
        public PlayDirectorNewChar()
            : this(Utility.RandomBool(), null, null)
        {
        }

        public PlayDirectorNewChar( bool sex)
            : this(sex, null, null)
        {
        }

        [Constructable]
        public PlayDirectorNewChar(bool sex, string name)
            : this(sex, name, null)
        {
        }

        [Constructable]
        public PlayDirectorNewChar(bool sex, string name, string title) //no need to change anything here
            : base(AIType.AI_PlayActor, FightMode.None, 10, 1, 0.8, 1.6)
        {
            m_OneTimeType = 3;

            Name = name;
            Title = title;

            SetStr(45, 90);
            SetDex(35, 70);
            SetInt(35, 70);

            SetHits(35, 120);
            SetStam(60, 80);
            SetMana(25, 50);

            SetDamage(7, 25);
            SetDamageType(ResistanceType.Physical, 100);
            SetResistance(ResistanceType.Physical, 10, 20);

            VirtualArmor = 30;

            if (!sex)
            {
                Body = 0x191;
                if (Name == null)
                    Name = NameList.RandomName("female");
            }
            else
            {
                Body = 0x190;
                if (Name == null)
                    Name = NameList.RandomName("male");

                // add beard
                switch (Utility.Random(7))
                {
                    default: FacialHairItemID = 0x00; break; //None
                    case 0: FacialHairItemID = 0x2041; break; //Mustache
                    case 1: FacialHairItemID = 0x203F; break; //ShortBeard
                    case 2: FacialHairItemID = 0x204D; break; //Vandyke
                    case 3:
                        {
                            if (Utility.RandomBool())
                                FacialHairItemID = 0x203E; //LongBeard
                            else 
                                FacialHairItemID = 0x2040; //Goatee
                            break;
                        }
                }
            }

            switch (Utility.Random(7))
            {
                case 0: HairItemID = 0x2047; break; //Afro
                case 1: HairItemID = 0x2045; break; //PageboyHair
                case 2: HairItemID = 0x203D; break; //PonyTail
                case 3: HairItemID = 0x203B; break; //ShortHair
                case 4: HairItemID = 0x2049; break; //TwoPigTails
                case 5: HairItemID = 0x203C; break; //LongHair
                case 6:
                    {
                        if (Female)
                            HairItemID = 0x2046; //BunsHair
                        else
                            HairItemID = 0x2048; //ReceedingHair
                        break;
                    }
            }

            Hue = Utility.RandomSkinHue();
            HairHue = Utility.RandomHairHue();
            FacialHairHue = HairHue;
            SpeechHue = Utility.RandomDyedHue();
            Hidden = true;

            PlayStep = 0;
            PlayCheck = 0;
            CheckCount = 0;
            Waiting = false;
            ActivePlay = false;
            NoAnswer = 0;

            if (PlayersWaiting == null)
                PlayersWaiting = new List<Mobile>();

            Actor1 = null;
            Actor2 = null;
            Actor3 = null;

            NewPlayer = null;

            InitOutfit();
            InitPlay();
            Console.WriteLine( "created");

        }


        public virtual void InitOutfit() // this just dresses the director
        {
            int hueRange;

            switch ( Utility.Random(9)  )
            {
                case 1: break; // barefoot poor
                case 2: AddItem(new Shoes(GetShoeHue())); break; // poor, normal
                case 3: AddItem(new Sandals(GetShoeHue())); break; // poor, rich
                default:
                case 4: AddItem(new Shoes(GetShoeHue())); break; // normal
                case 6: AddItem(new Boots(GetShoeHue())); break; // normal, rich
                case 9: AddItem(new ThighBoots(GetShoeHue())); break; // rich
            }

            if (Female)
            {
                hueRange = Utility.Random(5); //get a color scheme


                            switch (Utility.Random(4))
                            {
                                case 0:
                                    {
                                        AddItem(new PlainDress(GetRandomHueRange(hueRange)));
                                        break;
                                    }
                                case 1:
                                    {
                                        AddItem(new Skirt(GetRandomHueRange(hueRange)));
                                        AddItem(new Shirt(GetRandomHueRange(hueRange)));
                                        break;
                                    }
                                case 2:
                                    {
                                        AddItem(new LongPants(GetRandomHueRange(hueRange)));
                                        DoShirt(hueRange);
                                        break;
                                    }
                                case 3:
                                    {
                                        AddItem(new ShortPants(GetRandomHueRange(hueRange)));
                                        DoShirt(hueRange);
                                        break;
                                    }
                            }

                            switch (Utility.Random(5))
                            {
                                default: break;
                                case 0: AddItem(new Bonnet(GetRandomHueRange(hueRange))); break;
                                case 1: AddItem(new FloppyHat(GetRandomHueRange(hueRange))); break;
                                case 2: AddItem(new Cap(GetRandomHueRange(hueRange))); break;
                            }

                            if (Utility.RandomDouble() < .08)
                                AddItem(new FullApron(Utility.RandomNeutralHue()));

                            if (Utility.RandomBool())
                                AddItem(new GoldRing());


                
            }

            else // Male 
            {
                hueRange = Utility.Random(3);

                            switch (Utility.Random(3))
                            {
                                case 0: AddItem(new FancyShirt(GetRandomHueRange(hueRange))); break;
                                case 1: AddItem(new Doublet(GetRandomHueRange(hueRange))); break;
                                case 2: AddItem(new Shirt(GetRandomHueRange(hueRange))); break;
                            }

                            switch (Utility.Random(2))
                            {
                                case 0: AddItem(new LongPants(GetRandomHueRange(hueRange))); break;
                                case 1: AddItem(new ShortPants(GetRandomHueRange(hueRange))); break;
                            }

                            switch (Utility.Random(5))
                            {
                                default: break;
                                case 0: AddItem(new FloppyHat(Utility.RandomNeutralHue())); break;
                                case 1: AddItem(new FeatheredHat(GetRandomHueRange(hueRange))); break;
                            }

                            if (Utility.RandomDouble() < .16)
                                AddItem(new FullApron(Utility.RandomNeutralHue()));

                            if (Utility.RandomBool())
                                AddItem(new GoldRing());

                
            }
        }


        public void InitPlay() // this is what resets/sets up the play.  
        {
            if (ActivePlay)
            {
                ActivePlay = false;
                PlayStep = 0;
            }

            if (NewPlayer != null)
                NewPlayer = null;

            if (Actor1 == null) // this is where you set up Actor 1 (clothes, name etc)
            {
                Console.WriteLine( "Actor1");
                Actor1 = new PlayActor( true );

                //assign clothing for actor 1 here
                Actor1.AddItem( new Boots() );
                Item cloth1 = new Robe();
                    cloth1.Hue = 1635;
                    Actor1.AddItem( cloth1 );
                Item cloth2 = new WizardsHat();
                    cloth2.Hue = 1633;
                    Actor1.AddItem( cloth2 );
                Actor1.Name = "Peter Grimm";
                Actor1.Title = "the Dastardly";

                Actor1.SpeechHue = 233;

                Actor1.MoveToWorld( new Point3D( 1953, 1327, 0), Map.Malas ); //where do you want him before play starts?
            }

            if (Actor2 == null) // this is where you set up Actor 2 (clothes, name etc)
            {
                Actor2 = new PlayActor( true );

                //assign clothing for actor 1 here
                Actor2.AddItem( new PlateChest() );
                Actor2.AddItem( new PlateLegs() );
                Actor2.AddItem( new PlateGorget() );
                Actor2.AddItem( new PlateGloves() );
                Actor2.AddItem( new PlateHelm() );
                Actor2.AddItem( new Boots( ) );
                Actor2.Name = "Sygun";
                Actor2.Title = "the Subservient";

                Actor2.SpeechHue = 64;

                Actor2.MoveToWorld( new Point3D(1958,1323,0), Map.Malas ); // where do you want him before play starts?
            }

            if (Actor3 == null)
            {
                Actor3 = new PlayActor( true );

                Actor3.Name = "FinalTwist";
                Actor3.Title = "the admin";

                Item doublet = new Doublet();
                doublet.Hue = 1291;
                Actor3.AddItem( doublet );

                Item halby = new Halberd();
                halby.Hue = 1291;
                Actor3.AddItem( halby );

                Item kilt = new Kilt();
                kilt.Hue = 1291;
                Actor3.AddItem( kilt);

                Item boots = new Boots();
                boots.Hue = 1291;
                Actor3.AddItem( boots );

                Actor3.SpeechHue = 50;

                Actor3.MoveToWorld( new Point3D( 1908, 1321, -50), Map.Malas ); // location before play starts
            }

                       if (Actor1.X != 1953) // checking locations for the actors, where do you want them before play starts?
                            Actor1.MoveToWorld( new Point3D( 1953, 1327, 0), Map.Malas);
                        if (Actor2.X != 1958)
                            Actor2.MoveToWorld( new Point3D(1958,1323,0), Map.Malas);
                        if (Actor3.X != 1908)
                            Actor3.MoveToWorld( new Point3D(1908, 1321, -50), Map.Malas );

            PlayCheck = 0;

        }

        public void StartPlay( Mobile mob) // this is what is called when the play starts (here the trigger is in onthink)
        {
            if (!(mob is PlayerMobile))
                return;
            
            NewPlayer = mob;

            ((PlayerMobile)NewPlayer).Direction = NewPlayer.GetDirectionTo( Actor2.Location ); // this is how an actor looks towards something.  Actor2.Location is a Point3D, see how i did it here throughout

            if (mob.AccessLevel == AccessLevel.Player)
                mob.Frozen = true; // i freeze the new player here, remove this for a regular play?
                       
                        ActivePlay = true;
                        PlayCheck = 1;
                        PlayStep = 0;

        }
        public void OneTimeTick() // this is the timer for everything.  works in 1 second increments.  every second, everything here will run
        {
            //check to make sure everything is as it should be
            if (Actor1 == null || Actor2 == null || Actor3 == null)
                InitPlay(); // if any actors are missing, reset play

            if (!ActivePlay && NewPlayer != null)
                NewPlayer = null; //the play ended, director should forget the spectator

            if (ActivePlay)
            {
                if (NewPlayer == null)
                {
                    InitPlay();
                    return;
                }
                
                if (NewPlayer.Hunger <20 ) // keeping hunger etc topped up for this, but can remove this
                    NewPlayer.Hunger = 20;
                if (NewPlayer.Thirst <20)
                    NewPlayer.Thirst = 20;

                if (PlayCheck == 1) // play is going to run playcheck is the play "scene"  here 1 means scene 1
                {
                    if (PlayStep == 0) // playstep is the "action" or step in the scene.  e.g. a player moves to a location or says something is a step
                    {
                        // play just started, check actors are in place
                        if (Actor1.X != 1953)
                            MoveActor( Actor1, new Point3D( 1953, 1327, 0));
                        if (Actor2.X != 1958)
                            MoveActor( Actor2, new Point3D(1958,1323,0) );
                        if (Actor3.X != 1908)
                            Actor3.MoveToWorld( new Point3D(1908, 1321, -50), Map.Malas );//doesnt start in the room
                    }
                    if (PlayStep == 1) // every "playstep" is one second.  thats how you time actions.  so from playstep 1 to playstep 5 is 4 seconds
                    {
                        //move actor 2 down in front of cell
                        MoveActor( Actor2, new Point3D(1963,1323,0) );
                    }
                    if (PlayStep == 4)
                    {
                        //Move actor 2 up in front of cell
                        MoveActor( Actor2, new Point3D(1958,1323,0) );
                        Actor1.PlaySound( 0xF9 );
                    }
                    if (PlayStep == 7)
                    {
                        //Move actor 2 down in front of cell
                        MoveActor( Actor2, new Point3D(1963,1323,0) );
                        Actor2.Say("*burps*");
                    }
                    if (PlayStep == 10)
                    {
                        //Move actor 2 up in front of cell
                        MoveActor( Actor2, new Point3D(1958,1323,0) );
                    }
                    if (PlayStep == 11)
                    {
                        //move actor 2 down in front of cell
                        MoveActor( Actor2, new Point3D(1963,1323,0) );
                        Actor1.PlaySound( 0x249 );
                    }
                    if (PlayStep == 14)
                    {
                        //Move actor 2 up in front of cell
                        MoveActor( Actor2, new Point3D(1958,1323,0) );
                        Actor1.Say("Yes... Yes....");
                    }
                    if (PlayStep == 17)
                    {
                        //Move actor 2 down in front of cell
                        MoveActor( Actor2, new Point3D(1963,1323,0) );
                    }
                    if (PlayStep == 20)
                    {
                        //Move actor 2 up in front of cell
                        MoveActor( Actor2, new Point3D(1958,1323,0) );
                    }
                    if (PlayStep == 22)
                    {
                        //Change direction to face Actor 1
                        ((PlayActor)Actor2).Direction = Actor2.GetDirectionTo( NewPlayer.Location );
                    }
                    if (PlayStep == 24)
                    {
                        //Change direction to face Actor 1
                        ((PlayActor)Actor2).Direction = Actor2.GetDirectionTo( Actor1.Location );

                        //Actor 2 says the player woke up
                        Actor2.Say("M'Lord, the Prisoner woke up.");
                    }
                    if (PlayStep == 28)
                    {
                        Actor1.Say("Darnit, my new sleep spell exploit failed again.");
                    }
                    if (PlayStep == 34)
                    {
                        Actor1.Say("I'll need you to get me more of that special ingredient.");
                    }
                    if (PlayStep == 40)
                    {
                        Actor2.Say("But M'Lord");
                    }
                    if (PlayStep == 43)
                        Actor1.Say("No buts, you lazy lout.");
                    if (PlayStep == 45)
                        Actor1.Say("Go, or I'll sic my paragon pets on you again.");
                    if (PlayStep == 50)
                        Actor2.Say("Yes M'Lord");
                    if (PlayStep == 52)
                    {
                        //Move actor to exit point
                        MoveActor( Actor2, new Point3D(1959,1332,0) );
                    }
                    if (PlayStep == 57)
                    {
                        Actor2.MoveToWorld( new Point3D(1908, 1321, -50), Map.Malas); //remove from play (via exit point)
                        Actor2.PlaySound( 0xEC );
                    }
                    if (PlayStep == 58)
                        Actor1.Say("*Grumbles*");
                    
                    //Moongate gate = new Moongate();
                    
                    DummyGate gate = null;

                    if (PlayStep == 60)
                    {
                        Effects.PlaySound( Actor1.Location, Actor1.Map, 0x20E );
                        gate = new DummyGate();
                        gate.Hue = 543;
                        gate.MoveToWorld ( new Point3D(1964,1325,0), Map.Malas);
                    }
                    if (PlayStep == 62)
                    {
                        MoveActor(Actor1, new Point3D(1953,1325,0) ); // Actor 1 moves away from chair
                    }
                    if (PlayStep == 63)
                    {
                        ((PlayActor)Actor1).Direction = Actor1.GetDirectionTo( new Point3D(1964,1325,0) );
                        Actor1.Say("What's this?");
                    }
                    if (PlayStep == 66)
                    {
                        Actor3.MoveToWorld(new Point3D(1964,1325,0), Map.Malas);
                        
                    }
                    if (PlayStep == 67)
                    {
                        MoveActor(Actor3, new Point3D(1962,1325,0) );
                    }
                    if (PlayStep == 68)
                    {
                        ((PlayActor)Actor3).Direction = Actor3.GetDirectionTo( Actor1.Location );
                        Actor3.Say("AHA! Found you!");
                    }
                    if (PlayStep == 72)
                    {
                        Actor1.Say("Dastardly Barnacles!  Defences have been breached!");
                    }
                    if (PlayStep == 77)
                        Actor3.Say("I'll stop you from using any more exploits!");
                    if (PlayStep == 82)
                    {
                        Actor3.Say("Vas Flam");
                    }
                    if (PlayStep == 83)
                        Actor1.Say("We shall meet again, Final!");
                    if (PlayStep == 85)
                    {
                        Effects.SendLocationParticles( EffectItem.Create( Actor1.Location, Actor1.Map, EffectItem.DefaultDuration ), 0x3728, 10, 10, 0, 0, 2023, 0 );
                        Actor1.PlaySound( 0x1FE );
                        Actor1.MoveToWorld( new Point3D(1908, 1321, -50), Map.Malas);

                        if (gate != null)
                            gate.Delete();
                        else
                        {
                            Item del = null;
			                foreach ( object o in Actor3.GetObjectsInRange( 10 ) )
			                {
                                if (o is Item && ((Item)o).ItemID == 0xF6C )
                                    del = (Item)o;
                            }
                            if (del != null)
                                del.Delete();
                                    
                        }
                        Actor3.Say("That Peter Grimm... Always trying to find new exploits for unlimited gold.");


                    }
                    if (PlayStep == 90)
                    {
                        MoveActor(Actor3, new Point3D(1961,1323,0));
                    }
                    if (PlayStep == 92)
                        ((PlayActor)Actor3).Direction = Actor3.GetDirectionTo( new Point3D(1961,1318,0) );
                    if (PlayStep == 95)
                        Actor3.Say("Well well... what do we have here... a new Adventurer!");
                    if (PlayStep == 100)
                        Actor3.Say("Stuck in jail are we?");
                    if (PlayStep == 104)
                        Actor3.Say("Well... I guess I can let you out.");
                    if (PlayStep == 108)
                        Actor3.Say("But I need to know a few things first.");
                    if (PlayStep == 114)
                        Actor3.Say("This world was created by a being called Djeryv long ago.");
                    if (PlayStep == 120)
                        Actor3.Say("But it has changed, morphed... for better or worse.");
                    if (PlayStep == 130)
                        Actor3.Say("Forces of Good and Evil battle for dominance, and the world is plagued by horrible beings of power.");
                    if (PlayStep == 140)
                    {
                        Actor3.Say("If I let you out, I need to know a few things...");
                    }
                    if (PlayStep == 145)
                    {
                        Actor3.Say("Do you pledge to keep this world clean, and respect other adventurers?"); 
                        PlayCheck = 2;
                        Waiting = true;
                    }

                    if (PlayStep < 145)
                        PlayStep ++;
                    else 
                    {
                        PlayStep = 0;
                        PlayCheck = 2;
                        Waiting = true;
                    }
                }
                else if (PlayCheck == 2 && !Waiting ) // playcheck 2 is scene 2, where FT asks first question
                {
                    if (CheckCount == 5) // needs to keep talking
                        Actor3.Say("Do you pledge to keep this world clean, and respect other adventurers?"); 
                    if (CheckCount >= 5)
                    {
                        Waiting = true;
                        CheckCount = 0;
                    }
                    else
                        CheckCount ++;
                }
                else if (PlayCheck == 3 && !Waiting ) // FT asks another question.  doesn't apply if there's no interaction with spectator
                {
                    if (CheckCount == 5) // needs to keep talking
                        Actor3.Say("A Powerful Balance affects all things in this world.  The actions of adventurers affects whether it moves towards evil, or good."); 
                    if (CheckCount == 15)
                        Actor3.Say("Adventurers can choose to pledge for either side of the Balance, and affect a large number of things, like gold rewards, monster difficulty, and shop prices."); 
                    if (CheckCount == 26)
                        Actor3.Say("This comes with benefits like more attributes and faster skillgain, but also at a cost: death will carry a very real penalty."); 
                    if (CheckCount == 40)
                        Actor3.Say("Do you wish to affect the balance here?"); 
                    
                    if (CheckCount >= 40)
                    {
                        Waiting = true;
                        CheckCount = 0;
                    }
                    else
                        CheckCount ++;
                }
                else if (PlayCheck == 4 && !Waiting )
                {
                    if (CheckCount == 3) // needs to keep talking
                        Actor3.Say("Next, you may choose to bind your soul to the very fabric of this world."); 
                    if (CheckCount == 13)
                        Actor3.Say("Doing so means death will be permanent and you will return as a new person every time you die."); 
                    if (CheckCount == 23)
                        Actor3.Say("Adventuring this way can be very hard, but very rewarding - it is said that SoulBound can bind properties of items into their very beings!"); 
                    if (CheckCount == 29)
                        Actor3.Say("Do you wish to be a SoulBound?"); 
                    
                    if (CheckCount >= 29)
                    {
                        Waiting = true;
                        CheckCount = 0;
                    }
                    else
                        CheckCount ++;
                }
                else if (PlayCheck == 5)
                {
                    if (CheckCount == 2)
                        Actor3.Say("See you out there!");
                    if (CheckCount == 5) // needs to keep talking
                        Actor3.Say("An Vam Trav"); 
                    if (CheckCount == 8)
                    {
                        NewPlayer.Frozen = false;
                        NewPlayer.MoveToWorld(new Point3D(2983, 1043, 25), Map.Trammel);

                        InitPlay();
                    }
 
                    if (CheckCount >= 8)
                    {
                        CheckCount = 0;
                    }
                    else
                        CheckCount ++;


                }
                else if (Waiting)
                {
                    if (NoAnswer >= 10)
                    {
                        NewPlayer.MoveToWorld(new Point3D(2008, 1316, 0), Map.Malas);
                        //NewPlayer.Delete();
                        NewPlayer.NetState.Dispose();
                        InitPlay();
                        //Logout!!!! kick this player off
                    }
                    if (CheckCount > Utility.RandomMinMax(6,8))
                    {
                        switch (Utility.Random(7))
                        {
                            case 0: Actor3.Say("Hello?"); break;
                            case 1: Actor3.Say("So, what will it be, yes or no?"); break;
                            case 2: Actor3.Say("You can just tell me your answer."); break;
                            case 3: Actor3.Say("Did you want me to repeat?  Just say repeat."); break;
                            case 4: Actor3.Say("What'll it be, friend?"); break;
                            case 5: Actor3.Say("I know... tough decision and all."); break;
                            case 6: Actor3.Say("If you want me to repeat what I wrote, just ask me to repeat :)"); break;
                        }
                        CheckCount = 0;
                        NoAnswer ++;
                    }
                    else    
                        CheckCount ++;
                }

            }

		}

        public void MoveActor( Mobile actor, Point3D go) // use this to move an actor somewhere
        {
            WayPoint GoHere = new WayPoint();
			GoHere.Map = actor.Map;
			GoHere.Location = go;
            ((PlayActor)actor).CurrentWayPoint = GoHere;
        }

        public override void OnAfterDelete() // if you delete the director, what happens
        {
            if (Actor1 != null)
                Actor1.Delete();
            if (Actor2 != null)
                Actor2.Delete();
            if (Actor3 != null)
                Actor3.Delete();
        }

        public virtual int GetShoeHue()
        {

            return Utility.RandomNeutralHue();
        }

        public virtual int GetRandomHueRange(int range)
        {
            // Used to create color coordinated outfits.
            // Passing 0-4 will return a random hue in a set range
            // 5-9 will return a Netural hue, above 9 is modded to 0-9
            switch (range % 10)
            {
                default:
                case 0: return Utility.RandomNeutralHue();
                case 1: return Utility.RandomBlueHue();
                case 2: return Utility.RandomGreenHue();
                case 3: return Utility.RandomRedHue();
                case 4: return Utility.RandomYellowHue();
            }
        }

        public virtual void DoShirt(int hues)
        {
            switch (Utility.Random(2))
            {
                case 0: AddItem(new Doublet(GetRandomHueRange(hues))); break;
                case 1: AddItem(new Shirt(GetRandomHueRange(hues))); break;
            }
        }


        public override void AggressiveAction(Mobile aggressor, bool criminal)
        {
            //base.AggressiveAction(aggressor, m_criminalAction);


        }

        public override void OnDamage(int amount, Mobile from, bool willKill)
        {
            //base.OnDamage(amount, from, willKill);

        }

		public override void OnDoubleClick( Mobile from )
		{
            if (from.AccessLevel > AccessLevel.Player)
               InitPlay();
        }

        public override void OnMovement(Mobile m, Point3D oldLocation)
        {

        }

        public override bool HandlesOnSpeech(Mobile from)
        {

            return true;

        }

        public bool BusyCheck()
        {
            bool busy = false;
            foreach ( Mobile m in this.GetMobilesInRange( 10 ) )
			{
                if (m is PlayerMobile && m.AccessLevel == AccessLevel.Player)
                    busy = true;
            }
            return busy;
        } 

        public override void OnThink() // this is constantly running - here when he detects a newwplayer play starts.  this can be used for trigger
        {
            if (Actor1 == null || Actor2 == null || Actor3 == null)
                InitPlay();

            if (!Hidden) // keep me hidden!
                Hidden = true;

            if (!ActivePlay && NewPlayer == null) // look for new players
            {
               foreach ( Mobile mob in this.GetMobilesInRange( 5 ) )
                {
                    if (mob is PlayerMobile && mob.AccessLevel == AccessLevel.Player ) // new player found
                    {
                        StartPlay(mob);
                    }
                }
            }

            base.OnThink(); 
        }

        public override void OnSpeech(SpeechEventArgs e) // if the director hears anything, wha happens?
        {

			if ( !(e.Mobile is PlayerMobile) )
				return;

            Mobile m = e.Mobile;
			if (  m.AccessLevel > AccessLevel.Player && Insensitive.Contains( e.Speech, "start" ) )
			{
                StartPlay( this );
            }

			if (  Waiting && ( Insensitive.Contains( e.Speech, "i pledge" ) || Insensitive.Contains( e.Speech, "i do" ) || Insensitive.Contains( e.Speech, "aye" ) || Insensitive.Contains( e.Speech, "yes") || Insensitive.Contains( e.Speech, "sure") || Insensitive.Contains( e.Speech, "okay") ) )
			{
                
                if (PlayCheck == 2)
                {
				    Actor3.Say("Very well!  Welcome, friend."); 	
                    CheckCount = 0;
                    PlayCheck = 3;
                }	
                else if (PlayCheck == 3)
                {
				    Actor3.Say("Good Choice."); 	
                    CheckCount = 0;
                    PlayCheck = 4;
                    ((PlayerMobile)NewPlayer).Avatar= true;
                    NewPlayer.StatCap = 250;
                }
                else if (PlayCheck == 4)
                {
				    Actor3.Say("Good Luck!"); 	
                    CheckCount = 0;
                    PlayCheck = 5;
                    ((PlayerMobile)NewPlayer).SoulBound = true;
                }
                NoAnswer = 0;
                Waiting = false;
			}
            else if (  Waiting && (Insensitive.Contains( e.Speech, "nay" ) || Insensitive.Contains( e.Speech, "no") || Insensitive.Contains( e.Speech, "nope") || Insensitive.Contains( e.Speech, "naw") ) )
			{

                if (PlayCheck == 2)
                {
				    Actor3.Say("Okay, your choice, GoodBye!"); 	
                    NewPlayer.MoveToWorld(new Point3D(2008, 1316, 0), Map.Malas);
                    NewPlayer.NetState.Dispose();
                    NewPlayer.Delete();
                    InitPlay();
                    //Logout!!!! kick this player off
                }	
                else if (PlayCheck == 3)
                {
				    Actor3.Say("Thats fine... you prefer an easier game."); 	
                    CheckCount = 0;
                    PlayCheck = 4;
                    ((PlayerMobile)NewPlayer).Avatar= false;
                    NewPlayer.StatCap = 225;
                }
                else if (PlayCheck == 4)
                {
				    Actor3.Say("Fair enough!"); 	
                    CheckCount = 0;
                    PlayCheck = 5;
                    ((PlayerMobile)NewPlayer).SoulBound = false;
                }

                NoAnswer = 0;
                Waiting = false;
			}
            else if (  PlayCheck > 1 && Waiting && Insensitive.Contains( e.Speech, "repeat" ) )
			{
                NoAnswer = 0;
                Waiting = false;
            }
                
            base.OnSpeech(e);

        }


        public PlayDirectorNewChar(Serial serial)
            : base(serial)
        {
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)1);
            writer.Write((bool)m_criminalAction);
            writer.Write((Mobile)Actor1);
            writer.Write((Mobile)Actor2);
            writer.Write((Mobile)Actor3);
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();

            switch (version)
            {

                case 1:
                    {
                        m_criminalAction = reader.ReadBool();
                        Actor1 = reader.ReadMobile();
                        Actor2 = reader.ReadMobile();
                        Actor3 = reader.ReadMobile();
                        goto case 0;
                    }
                case 0:
                    {
                        // obsolete version
                        break;
                    }
            }

            m_OneTimeType = 3;

        }



    }
}
