using System;
using Server;


namespace Server.Items
{
	public class ShieldOfInvulnerability : OrderShield
	{
		public override int LabelNumber{ get{ return 1070693; } }


		public override int BasePhysicalResistance{ get{ return 15; } }
		public override int BaseFireResistance{ get{ return 15; } }
		public override int BaseColdResistance{ get{ return 15; } }
		public override int BasePoisonResistance{ get{ return 15; } }
		public override int BaseEnergyResistance{ get{ return 15; } }


		public override int InitMinHits{ get{ return Utility.RandomMinMax(100, 125); } }
		public override int InitMaxHits{ get{ return Utility.RandomMinMax(126, 150); } }


		[Constructable]
		public ShieldOfInvulnerability()
		{
			Hue = 0x4F2;


			Attributes.SpellChanneling = 1;
			//Attributes.ReflectPhysical = 10;
			Attributes.DefendChance = 25;
			ArmorAttributes.LowerStatReq = 100;
			ArmorAttributes.SelfRepair = 5;
		}


        public override void AddNameProperties(ObjectPropertyList list)
		{
            base.AddNameProperties(list);
			list.Add( 1070722, "Artifact");
        }


		public ShieldOfInvulnerability( Serial serial ) : base( serial )
		{
		}


		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( (int) 0 );
		}


		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}